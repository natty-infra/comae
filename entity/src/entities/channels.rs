//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "channels")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub ch_id: i64,
    pub ch_name: String,
    pub ch_description: String,
    pub ch_discord_channel_id: i64,
    pub ch_pl_id: i64,
    pub ch_role_mention_id: Option<i64>,
    pub ch_mention_flag: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::platforms::Entity",
        from = "Column::ChPlId",
        to = "super::platforms::Column::PlId",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Platforms,
    #[sea_orm(has_many = "super::posts::Entity")]
    Posts,
}

impl Related<super::platforms::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Platforms.def()
    }
}

impl Related<super::posts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Posts.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
